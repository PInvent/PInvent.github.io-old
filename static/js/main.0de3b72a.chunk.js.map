{"version":3,"sources":["img/pinvent-logo.png","serviceWorker.js","Component/Navbars.js","Util/Text.js","Home/Home.js","Component/InConstruction.js","Services/Services.js","AboutUs/AboutUs.js","Router.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Navbars","react_default","a","createElement","Navbar","className","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Component","Home","Component_Navbars","src","logo","alt","InConstruction","Services","Component_InConstruction","AboutUs","Router","Switch","Route","exact","path","component","App","src_Router","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qLCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wKCYSC,mLAlBX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,UAAU,SAASC,OAAO,KAAKC,MAAM,OAC3CN,EAAAC,EAAAC,cAACC,EAAA,EAAOI,MAAR,CAAcC,KAAK,KCdD,WDelBR,EAAAC,EAAAC,cAACC,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7BV,EAAAC,EAAAC,cAACC,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKT,UAAU,WACbJ,EAAAC,EAAAC,cAACW,EAAA,EAAIC,KAAL,CAAUN,KAAK,KCfJ,QDgBXR,EAAAC,EAAAC,cAACW,EAAA,EAAIC,KAAL,CAAUN,KAAK,aCfA,YDgBfR,EAAAC,EAAAC,cAACW,EAAA,EAAIC,KAAL,CAAUN,KAAK,aCfA,uBDIPO,aEQPC,mLAXX,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKgB,IAAKC,IAAMC,IAAI,OAAOhB,UAAU,kBAN5BW,aCcJM,mLAVX,OACErB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,UFH4B,mBEI5BF,EAAAC,EAAAC,cAAA,YFHqC,6GEHhBa,aCcdO,mLAZX,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,SHRmB,YGSnBF,EAAAC,EAAAC,cAACqB,EAAD,eAPaR,aCYRS,mLAZX,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACqB,EAAD,eAPYR,aCWPU,EAVA,kBACbzB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjChB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWR,IACnCtB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWN,OCF1BO,EANH,kBACV/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,QCEJC,IAASC,OACPlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,OAEFC,SAASC,eAAe,STsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0de3b72a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pinvent-logo.d787ca74.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./../App.css\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport {\r\n  TEXT_PINVENT,\r\n  TEXT_HOME,\r\n  TEXT_SERVICES,\r\n  TEXT_ABOUT_US\r\n} from \"../Util/Text\";\r\n\r\nclass Navbars extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar className=\"navbar\" expand=\"lg\" fixed=\"top\">\r\n          <Navbar.Brand href=\"/\">{TEXT_PINVENT}</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/\">{TEXT_HOME}</Nav.Link>\r\n              <Nav.Link href=\"/services\">{TEXT_SERVICES}</Nav.Link>\r\n              <Nav.Link href=\"/about-us\">{TEXT_ABOUT_US}</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbars;\r\n","// 1 word text\r\nexport const TEXT_PINVENT = \"PInvent\";\r\n\r\n// Navbars\r\nexport const TEXT_HOME = \"Home\";\r\nexport const TEXT_SERVICES = \"Services\";\r\nexport const TEXT_ABOUT_US = \"About us\";\r\n\r\n// Construction pages\r\nexport const TEXT_IN_CONSTRUCTION = \"In construction\";\r\nexport const TEXT_CONSTRUCTION_DESCRIPTION = \"Hi there, thank you coming by, our website is under construction, please come again another time.\";\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./../img/pinvent-logo.png\";\r\nimport Navbars from \"../Component/Navbars\";\r\nimport \"./../App.css\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbars />\r\n        <div className=\"home\">\r\n          <img src={logo} alt=\"logo\" className=\"logo\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./../App.css\";\r\nimport {\r\n  TEXT_IN_CONSTRUCTION,\r\n  TEXT_CONSTRUCTION_DESCRIPTION\r\n} from \"../Util/Text\";\r\n\r\nclass InConstruction extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"in-construction\">\r\n        <i className=\"fas fa-hard-hat icon\" />\r\n        <h2>{TEXT_IN_CONSTRUCTION}</h2>\r\n        <span>{TEXT_CONSTRUCTION_DESCRIPTION}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InConstruction;\r\n","import React, { Component } from \"react\";\r\nimport \"./../App.css\";\r\nimport {  } from \"react-bootstrap\";\r\nimport Navbars from \"../Component/Navbars\";\r\nimport InConstruction from \"../Component/InConstruction\";\r\nimport { TEXT_SERVICES } from \"../Util/Text\";\r\n\r\nclass Services extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbars />\r\n        <div className=\"main-pages container\">\r\n          <p>{TEXT_SERVICES}</p>\r\n          <InConstruction />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Services;\r\n","import React, { Component } from \"react\";\r\nimport Navbars from \"../Component/Navbars\";\r\nimport \"./../App.css\";\r\nimport InConstruction from \"../Component/InConstruction\";\r\n\r\nclass AboutUs extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbars />\r\n        <div className=\"main-pages container\">\r\n          <p>About us</p>\r\n          <InConstruction />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\nimport Services from \"./Services/Services\";\r\nimport AboutUs from \"./AboutUs/AboutUs\";\r\n\r\nconst Router = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/services\" component={Services} />\r\n      <Route path=\"/about-us\" component={AboutUs} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport Router from \"./Router\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Router />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}